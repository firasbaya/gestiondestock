{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\pfe\\\\gestiondestock\\\\assets\\\\views\\\\AdminScreen.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { ScrollView } from 'react-native-gesture-handler';\nvar validationSchema = yup.object().shape({\n  id: yup.string().label('ID Administrateur').required('ID Administrateur obligatoire.'),\n  password: yup.string().label('Mot de passe').required('Mot de passe obligatoire.')\n});\nexport function AdminScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      id: '',\n      password: ''\n    },\n    onSubmit: function onSubmit(values, actions) {\n      alert(JSON.stringify(values));\n      setTimeout(function () {\n        actions.setSubmitting(false);\n      }, 1000);\n    },\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, function (formikProps) {\n    return React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }\n    }, React.createElement(Text, {\n      style: styles.titre,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"Administrateur\"), React.createElement(View, {\n      style: styles.mini,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      style: styles.imageAdmin,\n      source: require(\"../img/admin.png\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.textAdmin,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, \"ID Administrateur\"))), React.createElement(TextInput, {\n      placeholder: \"Ecrivez votre ID\",\n      style: styles.textInput1,\n      onChangeText: formikProps.handleChange('ID'),\n      onBlur: formikProps.handleBlur('ID'),\n      autoFocus: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      style: {\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, formikProps.touched.id && formikProps.errors.id), React.createElement(View, {\n      style: styles.mini2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      style: styles.imageAdmin,\n      source: require(\"../img/cadenasn.png\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      style: styles.textAdmin,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Mot de passe\")), React.createElement(TextInput, {\n      placeholder: \"Mot de passe\",\n      style: styles.textInput1,\n      onChangeText: formikProps.handleChange('password'),\n      onBlur: formikProps.handleBlur('password'),\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: {\n        color: 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, formikProps.touched.password && formikProps.errors.password), React.createElement(View, {\n      style: styles.mini3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, formikProps.isSubmitting ? React.createElement(ActivityIndicator, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }) : React.createElement(TouchableOpacity, {\n      onPress: formikProps.handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.textIdent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }\n    }, \"S'identifier\"))), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate('MdpOubli√©Screen');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.guide,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"Mot de passe oubli\\xE9?\")), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate('SignUpScreen');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 6\n      }\n    }, React.createElement(Text, {\n      style: styles.create,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, \"Cr\\xE9er un compte.\")));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  text: {\n    textAlign: 'center',\n    marginTop: 100,\n    fontSize: 17\n  },\n  mini: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 80,\n    padding: 5\n  },\n  mini2: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 25,\n    padding: 3\n  },\n  mini3: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    borderRadius: 15,\n    backgroundColor: '#367ce5',\n    marginTop: 25,\n    padding: 5\n  },\n  imageAdmin: {\n    marginTop: 2,\n    height: 24,\n    width: 20,\n    borderRadius: 15,\n    marginLeft: 8\n  },\n  textAdmin: {\n    marginTop: 2,\n    marginLeft: 10,\n    fontSize: 18,\n    width: 200,\n    height: 30,\n    fontWeight: 'bold',\n    color: 'black'\n  },\n  guide: {\n    marginTop: 30,\n    fontSize: 12,\n    color: '#367ce5',\n    borderBottomWidth: 0.2,\n    borderBottomColor: '#367ce5'\n  },\n  textInput1: {\n    borderBottomWidth: 1,\n    height: 35,\n    width: 200\n  },\n  titre: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginTop: 150,\n    color: '#367ce5'\n  },\n  textIdent: {\n    marginTop: 2,\n    marginLeft: 10,\n    fontSize: 18,\n    color: 'white',\n    width: 200,\n    height: 30,\n    textAlign: 'center'\n  },\n  create: {\n    marginTop: 80,\n    fontSize: 14,\n    color: '#367ce5'\n  }\n});","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/pfe/gestiondestock/assets/views/AdminScreen.js"],"names":["React","Formik","yup","ScrollView","validationSchema","object","shape","id","string","label","required","password","AdminScreen","navigation","styles","container","values","actions","alert","JSON","stringify","setTimeout","setSubmitting","formikProps","titre","mini","imageAdmin","require","textAdmin","textInput1","handleChange","handleBlur","color","touched","errors","mini2","mini3","isSubmitting","handleSubmit","textIdent","navigate","guide","create","StyleSheet","flex","alignItems","text","textAlign","marginTop","fontSize","flexDirection","justifyContent","padding","borderRadius","backgroundColor","height","width","marginLeft","fontWeight","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  StyleSheet,\r\n  TextInput,\r\n  Image,\r\n  ActivityIndicator,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n\r\nconst validationSchema = yup.object().shape({\r\n  id: yup\r\n  .string()\r\n  .label('ID Administrateur')\r\n  .required('ID Administrateur obligatoire.'),\r\n  password: yup\r\n    .string()\r\n    .label('Mot de passe')\r\n    .required('Mot de passe obligatoire.')\r\n});\r\n\r\nexport  function AdminScreen({navigation}){\r\n  return (\r\n  <View style={styles.container}>\r\n    <ScrollView>\r\n    <Formik\r\n      initialValues={{ id: '', password: '' }}\r\n      onSubmit={(values, actions) => {\r\n        alert(JSON.stringify(values));\r\n        setTimeout(() => {\r\n          actions.setSubmitting(false);\r\n        }, 1000);\r\n      }}\r\n      validationSchema={validationSchema}\r\n    >\r\n      {(formikProps) => (\r\n        <React.Fragment>\r\n         <View>\r\n         \r\n          <Text style={styles.titre}>Administrateur</Text>\r\n         \r\n          <View style={styles.mini}>\r\n                <Image\r\n                    style={styles.imageAdmin}\r\n                    source={require('../img/admin.png')}\r\n                />\r\n           \r\n              <Text style={styles.textAdmin}>ID Administrateur</Text>\r\n           \r\n          </View>\r\n          </View>\r\n              <TextInput\r\n                placeholder=\"Ecrivez votre ID\"\r\n                style={styles.textInput1}\r\n                onChangeText={formikProps.handleChange('ID')}\r\n                onBlur={formikProps.handleBlur('ID')}\r\n                autoFocus\r\n              />\r\n\r\n            <Text style={{ color: 'red' }}>\r\n              {formikProps.touched.id && formikProps.errors.id}\r\n            </Text>\r\n          \r\n\r\n          <View style={styles.mini2}>\r\n              <Image\r\n                style={styles.imageAdmin}\r\n                source={require('../img/cadenasn.png')}\r\n               />\r\n                <Text style={styles.textAdmin}>Mot de passe</Text>\r\n          </View>\r\n            \r\n            <TextInput\r\n              placeholder=\"Mot de passe\"\r\n              style={styles.textInput1}\r\n              onChangeText={formikProps.handleChange('password')}\r\n              onBlur={formikProps.handleBlur('password')}\r\n              secureTextEntry\r\n            />\r\n\r\n            <Text style={{ color: 'red' }}>\r\n              {formikProps.touched.password && formikProps.errors.password}\r\n            </Text>\r\n          \r\n          \r\n\r\n          <View style={styles.mini3}>\r\n              \r\n              {formikProps.isSubmitting ? (\r\n                  <ActivityIndicator />\r\n                  ) : (\r\n                    <TouchableOpacity\r\n                    onPress={formikProps.handleSubmit}>\r\n                      <Text style={styles.textIdent}>S'identifier</Text>\r\n                    </TouchableOpacity>\r\n                   )}\r\n\r\n          </View>\r\n          <TouchableOpacity\r\n             onPress={() => {navigation.navigate('MdpOubli√©Screen')}}>\r\n              <Text style={styles.guide}>Mot de passe oubli√©?</Text>\r\n          </TouchableOpacity>\r\n\r\n     <TouchableOpacity\r\n          onPress={() => {navigation.navigate('SignUpScreen')}}>\r\n          <Text style={styles.create}>Cr√©er un compte.</Text>\r\n      </TouchableOpacity>\r\n      \r\n        </React.Fragment>\r\n      )}\r\n      \r\n    </Formik>\r\n   </ScrollView>\r\n  </View>\r\n);}\r\nconst styles=StyleSheet.create({\r\n\r\n  container:{ \r\n  flex:1,\r\n  alignItems:'center',\r\n  },\r\n  text:{\r\n      textAlign:'center', \r\n      marginTop:100,\r\n      fontSize:17,\r\n  },\r\nmini:{\r\n  flexDirection:'row',\r\n  justifyContent:'center',\r\n   marginTop:80,\r\n   padding:5,\r\n},\r\nmini2:{\r\n  flexDirection:'row',\r\n  justifyContent:'center',\r\n   marginTop:25,\r\n   padding:3,\r\n},\r\nmini3:{\r\n  flexDirection:'row',\r\n  justifyContent:'center',\r\n borderRadius:15,\r\n  backgroundColor:'#367ce5',\r\nmarginTop:25,\r\npadding:5,\r\n},\r\nimageAdmin:{\r\n  marginTop:2,\r\n  height:24,\r\n  width:20,\r\n  borderRadius:15,\r\n  marginLeft:8\r\n},\r\ntextAdmin:{\r\n  marginTop:2,\r\n  marginLeft:10,\r\n  fontSize:18,\r\n  width:200,\r\n  height:30,\r\n  fontWeight:'bold',\r\n  color:'black',\r\n},\r\nguide:{\r\n  marginTop:30,\r\n  fontSize:12,\r\n  color:'#367ce5',\r\n  borderBottomWidth:0.2,\r\n  borderBottomColor:'#367ce5',\r\n},\r\ntextInput1:{\r\n  borderBottomWidth:1,\r\n  height:35,\r\n  width:200\r\n},\r\ntitre:{\r\n  fontSize:30,\r\n  fontWeight:'bold',\r\n  marginTop:150,\r\n  color:'#367ce5',\r\n},\r\ntextIdent:{\r\n  marginTop:2,\r\n  marginLeft:10,\r\n  fontSize:18,\r\n  color:'white',\r\n  width:200,\r\n  height:30,\r\n  textAlign:'center',\r\n},\r\ncreate:{\r\n  marginTop:80,\r\n  fontSize:14,\r\n  color:'#367ce5',\r\n  \r\n}\r\n});"]},"metadata":{},"sourceType":"module"}